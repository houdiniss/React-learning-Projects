{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice.js\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.id === itemId);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== itemId);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport async function sendCartData(cart) {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    async function sendRequest() {\n      const response = await fetch('https://backend-for-react-app-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    }\n    ;\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n}\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","itemId","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["C:/Users/Giorgos/Desktop/Εγγραφα/Courses/React Course/Section 20-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice.js\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    totalAmount: 0\r\n  },\r\n  reducers: {\r\n    addItemToCart(state,action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if(!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state,action) {\r\n      const itemId = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === itemId);\r\n      state.totalQuantity--;\r\n      if(existingItem.quantity === 1) {\r\n        state.items = state.items.filter(item => item.id !== itemId);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport async function sendCartData(cart) {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data!'\r\n    }));\r\n\r\n    async function sendRequest() {\r\n      const response = await fetch('https://backend-for-react-app-default-rtdb.europe-west1.firebasedatabase.app/cart.json',{\r\n        method: 'PUT',\r\n        body: JSON.stringify(cart)\r\n      });\r\n\r\n      if(!response.ok) {\r\n        throw new Error('Sending cart data failed.');\r\n      }\r\n    };\r\n\r\n    try{\r\n      await sendRequest();\r\n\r\n      dispatch(uiActions.showNotification({\r\n        status: 'success',\r\n        title: 'Success...',\r\n        message: 'Sent cart data successfully!'\r\n      }));\r\n    } catch(error) {\r\n      dispatch(uiActions.showNotification({\r\n        status: 'error',\r\n        title: 'Error...',\r\n        message: 'Sending cart data failed!'\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}